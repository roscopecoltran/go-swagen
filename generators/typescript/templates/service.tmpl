import * as schemas from './schema';
import { IRequest } from './request';


export default class {{ .Service }} {
  request: IRequest

  constructor(request: IRequest) {
    this.request = request;
  }
  {{ range .Operations }}
  {{ .ID | CamelCase }}({ {{ range .Parameters }}
    {{ .Name | CamelCase }},{{ end }}
  }:{ {{ range .Parameters }}
    {{ .Name | CamelCase }}{{ with .Required }}{{ else }}?{{ end }}: {{ with .Schema }}schemas.{{ end }}{{ . | parameterType }},{{ end }}
  }){{ with .Responses }}:Promise<schemas.{{ index .StatusCodeResponses 200 | responseType }}>{{ end }} {
    const options: { [key: string]: any } = { method: "{{ index .Extensions "method" }}", query: {} };
    {{ range .Parameters }}{{ if .Required }}
    if (!{{ .Name | CamelCase }}) {
      throw new Error('{{ .Name | CamelCase }} is required');
    }{{ end }}{{ if eq .In "query" }}
    options.query.{{ .Name }} = {{ .Name | CamelCase }}{{ else if eq .In "body" }}
    options.body = {{ .Name | CamelCase }}{{ end }}{{ end }}
    return this.request.send(`{{ index .Extensions "endpoint" }}`, options)
  }
  {{ end }}
}