import { schema } from 'normalizr';
import * as api from './api';
import * as cs from './constant';
import * as sc from './schema';
import { CALL_API } from './constant';


function createActionTypes(type) {
  return {
    get DEFAULT() { return cs[`${type}`] },
    get REQUEST() { return cs[`${type}_REQUEST`] },
    get SUCCESS() { return cs[`${type}_SUCCESS`] },
    get FAIL() { return cs[`${type}_FAIL]`] },
  }
}

{{ range $key, $value := . }}
export const {{ $key }}ActionTypes = {
  {{ range $value }}
  {{ .Name }}: createActionTypes(cs.{{ .Type }}),
  {{ end }}
};
{{ end }}

{{ range $key, $value := . }}
export const {{ $key }} = {
  {{ range $value }}
  {{ .Name }}(params:{ {{ range .Parameters }}
    {{ .Name | CamelCase }}{{ with .Required }}{{ else }}?{{ end }}: {{ with .Schema }}api.{{ end }}{{ .Type }},{{ end }}
  }, meta) {
    return {
      [CALL_API]: {
        endpoint: api.{{ $key }}.{{ .Name }}(params),
        types: [cs.{{ .Type }}_REQUEST, cs.{{ .Type }}_SUCCESS, cs.{{ .Type }}_FAIL],
        {{ if .RespSchema }}schema: sc.{{ .RespSchema }},{{ end }}
      },
      meta: Object.assign({}, meta, { params }),
    };
  },
  {{ end }}
};
{{ end }}

